<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="YourDatabasePathHere.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1851"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="MachineryHistory" custom_title="0" dock_id="1" table="4,16:mainMachineryHistory"/><dock_state state="000000ff00000000fd00000001000000020000039100000260fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000003910000011e00ffffff000002690000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Details" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="35"/><column index="2" value="55"/><column index="3" value="41"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Machinery" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="79"/><column index="2" value="83"/><column index="3" value="159"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MachineryHistory" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="61"/><column index="2" value="81"/><column index="3" value="89"/><column index="4" value="83"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Transactions" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="87"/><column index="2" value="81"/><column index="3" value="48"/><column index="4" value="87"/><column index="5" value="55"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- Create the Users table
CREATE TABLE Users (
    UserId INTEGER PRIMARY KEY AUTOINCREMENT,
    UserName TEXT NOT NULL
);

-- Create the Machinery table
CREATE TABLE Machinery (
    MachineryId INTEGER PRIMARY KEY AUTOINCREMENT,
    CurrentName TEXT NOT NULL,
    CreatedDate DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Create the MachineryHistory table
CREATE TABLE MachineryHistory (
    HistoryId INTEGER PRIMARY KEY AUTOINCREMENT,
    MachineryId INTEGER NOT NULL,
    PreviousName TEXT NOT NULL,
    UpdatedDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (MachineryId) REFERENCES Machinery(MachineryId)
);

-- Create the Transactions table
CREATE TABLE Transactions (
    TransactionId INTEGER PRIMARY KEY AUTOINCREMENT,
    MachineryId INTEGER NOT NULL,
    UserId INTEGER NOT NULL,
    StartDate DATETIME NOT NULL,
    EndDate DATETIME,
    FOREIGN KEY (MachineryId) REFERENCES Machinery(MachineryId),
    FOREIGN KEY (UserId) REFERENCES Users(UserId)
);

SELECT 
    m.MachineryId, 
    m.CurrentName AS MachineryName, 
    u.UserName AS CurrentHolder, 
    t.StartDate 
FROM Machinery m
LEFT JOIN Transactions t ON m.MachineryId = t.MachineryId AND t.EndDate IS NULL
LEFT JOIN Users u ON t.UserId = u.UserId;

SELECT 
    t.TransactionId, 
    m.CurrentName AS MachineryName, 
    u.UserName AS UserName, 
    t.StartDate, 
    t.EndDate 
FROM Transactions t
JOIN Machinery m ON t.MachineryId = m.MachineryId
JOIN Users u ON t.UserId = u.UserId
ORDER BY t.StartDate DESC;

SELECT 
    mh.HistoryId,
    mh.MachineryId, 
    mh.PreviousName, 
    m.CurrentName AS CurrentName, 
    mh.UpdatedDate 
FROM MachineryHistory mh
JOIN Machinery m ON mh.MachineryId = m.MachineryId
ORDER BY mh.UpdatedDate DESC;


INSERT INTO Users (UserName) VALUES 
('User1'), 
('User2'), 
('User3');

INSERT INTO Machinery (CurrentName) VALUES 
('Printer'), 
('iPad'), 
('Laptop');

INSERT INTO Transactions (MachineryId, UserId, StartDate) VALUES 
(1, 1, '2023-12-11'), 
(2, 2, '2023-12-12');


UPDATE Machinery 
SET CurrentName = 'Printer' 
WHERE MachineryId = 1;

CREATE TRIGGER UpdateMachineryNameHistory
AFTER UPDATE OF CurrentName ON Machinery
BEGIN
   INSERT INTO MachineryHistory (MachineryId, PreviousName, UpdatedDate)
   VALUES (OLD.MachineryId, OLD.CurrentName, datetime('now'));
END;


SELECT * FROM Machinery WHERE MachineryId = 1;


</sql><current_tab id="0"/></tab_sql></sqlb_project>
